#!/usr/bin/python
# -*- coding: utf-8 -*-


#-------------------------------------
#
#    SCRIPT PYTHON take_some_reads_from_fastq
#     				récupère les reads d'un fichier fastq (compressé ou pas) donnés dans une liste
#  					Autor: Yan Holtz, yan1166@hotmail.com
#           contributor: Alban BESNARD albanbesnard@hotmail.fr
#-------------------------------------

import os
import sys
import re
import gzip
try:
  import argparse
except ImportError:
  print"oops, the import /argparse/ didn't work"


parser = argparse.ArgumentParser(description= 'récupère les reads d\'un fichier fastq (compressé ou pas) donnés dans une liste')
parser.add_argument('-fic', required=True, help=' fichier fastq dans lequel on veut récupérer des reads ')
parser.add_argument('-liste', required=True, help=' liste des reads à récupérer')
parser.add_argument('-out', required=True, help=' output')

args = parser.parse_args()

fic=args.fic
liste=args.liste
output=args.out

#------------------------------------------------------------------------------------------------------

#Je créé une liste contenant les séquences que je veux garder.
seq_to_keep=dict()
for line in open(liste):	
	line=line.strip()
	seq_to_keep[line]=""
	
#------------------------------------------------------------------------------------------------------

#Et je conserve uniquement les contigs présents dans la liste

num=3

## On traite le cas particulier des .gz (fichiers zippés)
if '.gz' in fic:
	with gzip.open(output,"wb") as tmp :
		for line in gzip.open(fic,'rb'):
			num+=1
			if num == 4:
				num=0
				line=line.strip()
				if line.startswith("@"):
					#print line
					contig=line.replace("@","")
					contig=contig.split()[0]
				if contig in  seq_to_keep:
					toprint="yes"
				else:
					toprint="no"
		
			if toprint=="yes":
				line=line.replace("\n","")
				tmp.write(line+"\n")

## Le cas d'un fichier fastq simple
else:
	tmp=open(output,"w")
	for line in open(fic):
		num+=1
		if num == 4:
			num=0
			line=line.strip()
			if line.startswith("@"):
				print line
				contig=line.replace("@","")
				contig=contig.split()[0]
			if contig in  seq_to_keep:
				toprint="yes"
			else:
				toprint="no"
		
		if toprint=="yes":
			line=line.replace("\n","")
			tmp.write(line+"\n")
		
	tmp.close



print "\n\nOk, c'est gagné, les reads desires  ont été récupérés !\n\n"
